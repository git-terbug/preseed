#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

export DEBIAN_FRONTEND=noninteractive
export DEF_USER=test
export DEF_PATH=/home/$DEF_USER
mkdir $DEF_PATH/pslog
export PS_LOG=$DEF_PATH/pslog

echo "configurando phpmyadmin" > $PS_LOG/phpmyadmin-ps

apt-get update | tee -a $PS_LOG/phpmyadmin-ps
#apt-get dist-upgrade > $PS_LOG/logupdate
#/usr/share/debconf/fix_db.pl > $PS_LOG/logtest

# Usuario del sistema de configuración basado en web:
echo "phpmyadmin phpmyadmin/setup-username string config" | debconf-set-selections 
# Contraseña del sistema de configuración basado en web:
echo "phpmyadmin phpmyadmin/setup-password password config" | debconf-set-selections 
# Confirmación de contraseña:
echo "phpmyadmin phpmyadmin/password-confirm password config" | debconf-set-selections 

# Nombre del usuario de administración de la base de datos:
#echo "phpmyadmin phpmyadmin/mysql/admin-user string root" | debconf-set-selections 
echo "phpmyadmin phpmyadmin/mysql/admin-user string admin" | debconf-set-selections 
# Contraseña del usuario de administración de la base de datos:
echo "phpmyadmin phpmyadmin/mysql/admin-pass password admin" | debconf-set-selections 

# Contraseña de aplicación MySQL para phpmyadmin:
echo "phpmyadmin phpmyadmin/mysql/app-pass password qwerty" | debconf-set-selections
# Confirmación de contraseña:
echo "phpmyadmin phpmyadmin/app-password-confirm password qwerty" | debconf-set-selections

# ¿Desea configurar la base de datos para phpmyadmin con «dbconfig-common»?
echo "phpmyadmin	phpmyadmin/dbconfig-install	boolean	true" | debconf-set-selections
# ¿Desea realizar las actualizaciones de la base de datos de phpmyadmin con «dbconfig-common»?
echo "phpmyadmin	phpmyadmin/dbconfig-upgrade	boolean	true" | debconf-set-selections

# Servidor web que desea reconfigurar automáticamente:
# Choices: apache2, lighttpd
echo "phpmyadmin	phpmyadmin/reconfigure-webserver	multiselect	apache2" | debconf-set-selections

# El tipo de base de datos que se va a utilizar para phpmyadmin:
# Choices: 
echo "phpmyadmin	phpmyadmin/database-type	select	mysql" | debconf-set-selections
# Método de conexión para la base de datos MySQL de phpmyadmin:
#phpmyadmin	phpmyadmin/mysql/method	select	unix socket
#phpmyadmin	phpmyadmin/mysql/admin-user	string	root
# Nombre de usuario MySQL para phpmyadmin:
echo "phpmyadmin	phpmyadmin/db/app-user	string	phpmyadmin" | debconf-set-selections
# Nombre de la base de datos MySQL para phpmyadmin:
echo "phpmyadmin	phpmyadmin/db/dbname	string	phpmyadmin" | debconf-set-selections
#phpmyadmin	phpmyadmin/reconfigure-webserver	multiselect	apache2
#phpmyadmin	phpmyadmin/setup-username	string	admin

# ¿Desea realizar una copia de seguridad de la base de datos de phpmyadmin antes de actualizar?
#phpmyadmin	phpmyadmin/upgrade-backup	boolean	true
# ¿Desea reinstalar la base de datos para phpmyadmin?
#phpmyadmin	phpmyadmin/dbconfig-reinstall	boolean	false

#configurando usuario root phmyadmin
mysql --user=root mysql -Bse "CREATE USER 'admin'@'localhost' IDENTIFIED BY 'admin';GRANT ALL PRIVILEGES ON *.* TO 'admin'@'localhost' WITH GRANT OPTION;FLUSH PRIVILEGES;"

#apt-get install -q -y phpmyadmin > $PS_LOG/logtest
apt-get install -q -y phpmyadmin | tee -a $PS_LOG/phpmyadmin-ps

#dpkg-reconfigure phpmyadmin > $PS_LOG/logdpkg

#apt-get -f dist-upgrade > $PS_LOG/logapt


echo "configurando tomcat" > $PS_LOG/tomcat-ps

apt-get update | tee -a $PS_LOG/tomcat-ps
apt-get install -q -y tomcat8 tomcat8-admin tomcat8-user tomcat8-common libtomcat8-java \
	libtcnative-1 libapache2-mod-apreq2 libapreq2-3 libmysql-java libservlet3.1-java \
	libapache-pom-java libjasperreports-java libcommons-logging-java libapache2-mod-jk \
	libpostgresql-jdbc-java | tee -a $PS_LOG/tomcat-ps  

#copiar el controlador adecuado
#ln -s /usr/share/java/mysql-connector-java.jar /usr/share/tomcat8/lib/mysql-connector-java.jar |tee -a $PS_LOG/tomcat-ps
ln -s /usr/share/java/postgresql.jar /usr/share/tomcat8/lib
ls /usr/share/tomcat8/lib | tee -a $PS_LOG/tomcat-ps

#configurando opciones
echo 'export CATALINA_OPTS="$CATALINA_OPTS -Xms256m"' > /usr/share/tomcat8/bin/setenv.sh
echo 'export CATALINA_OPTS="$CATALINA_OPTS -Xmx512m"' >> /usr/share/tomcat8/bin/setenv.sh
chmod +x /usr/share/tomcat8/bin/setenv.sh

#apt-get install -f | tee -a $PS_LOG/post-install


echo "configurando Aggregate" > $PS_LOG/aggregate-ps

wget 'https://s3.amazonaws.com/opendatakit.downloads/ODK Aggregate v1.4.13 linux-x64-installer.run' -P $DEF_PATH | tee -a $PS_LOG/aggregate-ps
chown $DEF_USER:$DEF_USER $DEF_PATH'/ODK Aggregate v1.4.13 linux-x64-installer.run'
chmod +x $DEF_PATH'/ODK Aggregate v1.4.13 linux-x64-installer.run'


echo "finalizar instalación" > $PS_LOG/post-install
git clone 'https://github.com/git-terbug/scripts.git' $DEF_PATH/scripts | tee -a $PS_LOG/aggregate-ps
apt-get update | tee -a $PS_LOG/post-install
rm /etc/rc.local | tee -a $PS_LOG/post-install

#debian 8
#rm $PS_LOG/post.sh | tee -a $PS_LOG/post-install
#cp /etc/rc.local.old /etc/rc.local | tee -a $PS_LOG/post-install

#echo "removido exitoso" > $PS_LOG/rm


exit 0